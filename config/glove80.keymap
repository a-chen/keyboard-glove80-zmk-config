/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define HYPER LC(LS(LG(LALT)))

// layers

#define DEFAULT 0
#define LOWER 1
#define MAGIC 2
#define FACTORY_TEST 3

/ {
    behaviors {
        // For the "layer" key, it'd nice to be able to use it as either a shift or a toggle.
        // Configure it as a tap dance, so the first tap (or hold) is a &mo and the second tap is a &to

        layer_td: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYER_TAP_DANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo 4>, <&to 4>;
        };

        magic: magic_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "MAGIC_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&rgb_ug_status_macro>;
        };
    };

    macros {
        rgb_ug_status_macro: rgb_ug_status_macro_0 {
            label = "RGB_UG_STATUS";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&rgb_ug RGB_STATUS>;
        };

        bt_0: bt_profile_macro_0 {
            label = "BT_0";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 0 &to 0>;
        };

        bt_1: bt_profile_macro_1 {
            label = "BT_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 1 &to 1>;
        };

        bt_2: bt_profile_macro_2 {
            label = "BT_2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 2 &to 0>;
        };

        bt_3: bt_profile_macro_3 {
            label = "BT_3";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 3 &to 0>;
        };

        usb: usb {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_USB &to 0>;
            label = "USB";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  F1   |  F2 |  F3 |  F4  |  F5  |                                                               |  F6   |  F7   |  F8  |   F9  |  F10 |
            // |  =    |  1  |  2  |  3   |  4   |  5   |                                                 |  6   |   7   |   8   |  9   |   0   |   -  |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                                                 |  Y   |   U   |   I   |  O   |   P   |   \  |
            // |  ESC  |  A  |  S  |  D   |  F   |  G   |                                                 |  H   |   J   |   K   |  L   |   ;   |   '  |
            // |   `   |  Z  |  X  |  C   |  V   |  B   | LSHFT | LCTRL | LOWER | | LGUI  | RCTRL | RSHFT |  N   |   M   |   ,   |  .   |   /   | PGUP |
            // | MAGIC | HOME| END | LEFT | RIGHT|      | BSPC  | DEL   | LALT  | | RALT  | RET   | SPACE |      |  UP   | DOWN  |  [   |   ]   | PGDN |

            bindings = <
&kp F1          &kp F2      &kp F3   &kp F4    &kp F5                                                                                                        &kp F6    &kp F9     &kp F10   &kp F11   &kp F12
&kp EQUAL       &kp N1      &kp N2   &kp N3    &kp N4     &kp N5                                                                                     &kp N6  &kp N7    &kp N8     &kp N9    &kp N0    &kp MINUS
&kp TAB         &kp Q       &kp W    &kp E     &kp R      &kp T                                                                                      &kp Y   &kp U     &kp I      &kp O     &kp P     &kp BSLH
&lt 2 ESCAPE    &kp A       &kp S    &kp D     &kp F      &kp G                                                                                      &kp H   &kp J     &kp K      &kp L     &kp SEMI  &kp SQT
&kp LEFT_SHIFT  &kp Z       &kp X    &kp C     &kp V      &kp B   &kp LCTRL                 &mo 3             &trans  &trans  &kp DEL  &kp LEFT_WIN  &kp N   &kp M     &kp COMMA  &kp DOT   &kp FSLH  &kp PG_UP
&kp GRAVE       &magic 5 0  &kp END  &kp LEFT  &kp RIGHT          &mt LEFT_SHIFT BACKSPACE  &mt LEFT_ALT DEL  &trans  &trans  &kp RET  &kp SPACE             &kp DOWN  &kp UP     &kp LBKT  &kp RBKT  &kp PG_DN
            >;
        };

        mac {
            bindings = <
&trans  &trans  &trans  &trans  &trans                                                                                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                                                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                                                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                                                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &kp LEFT_WIN  &trans  &trans  &trans  &trans  &kp LEFT_CONTROL  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans        &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans
            >;
        };

        navigation {
            bindings = <
&trans  &trans  &trans  &trans  &trans                                                                            &trans     &trans   &trans     &trans         &trans
&trans  &trans  &trans  &trans  &trans  &trans                                                          &trans    &trans     &trans   &trans     &trans         &trans
&trans  &trans  &trans  &trans  &trans  &trans                                                          &trans    &kp PG_UP  &trans   &kp PG_DN  &kp DEL        &trans
&trans  &trans  &trans  &trans  &trans  &trans                                                          &kp LEFT  &kp DOWN   &kp UP   &kp RIGHT  &kp BACKSPACE  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans   &trans  &trans  &trans  &trans  &trans         &trans    &kp HOME   &kp END  &trans     &trans         &trans
&trans  &trans  &tog 1  &trans  &trans          &kp DEL  &trans  &trans  &trans  &trans  &kp BACKSPACE            &trans     &trans   &trans     &trans         &trans
            >;
        };

        symbol {
            bindings = <
&trans  &trans      &trans            &trans          &trans                                                                                        &trans                 &trans           &trans             &trans           &trans
&trans  &trans      &trans            &trans          &trans                &trans                                                       &trans     &trans                 &trans           &trans             &trans           &trans
&trans  &kp ESCAPE  &kp LEFT_BRACKET  &kp LEFT_BRACE  &kp LEFT_PARENTHESIS  &kp TILDE                                                    &kp CARET  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &kp GRAVE        &trans
&trans  &kp MINUS   &kp STAR          &kp EQUAL       &kp UNDER             &kp DOLLAR                                                   &kp POUND  &trans                 &trans           &trans             &trans           &trans
&trans  &kp PLUS    &kp PIPE          &kp AT_SIGN     &kp SLASH             &kp PERCENT  &trans  &trans  &trans  &trans  &trans  &trans  &trans     &kp BACKSLASH          &kp AMPERSAND    &kp QUESTION       &kp EXCLAMATION  &trans
&trans  &trans      &trans            &trans          &trans                             &trans  &trans  &trans  &trans  &trans  &trans             &trans                 &trans           &trans             &trans           &trans
            >;
        };

        lower_layer {
            bindings = <
&kp C_BRI_DN  &kp C_BRI_UP  &kp C_PREV  &kp C_NEXT  &kp C_PP                                                                         &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP   &none            &kp PAUSE_BREAK
&trans        &none         &none       &none       &none      &kp HOME                                                   &kp LPAR   &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp PSCRN
&trans        &none         &none       &kp UP      &none      &kp END                                                    &kp RPAR   &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &kp SLCK
&trans        &none         &kp LEFT    &kp DOWN    &kp RIGHT  &kp PG_UP                                                  &kp PRCNT  &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_PLUS      &none
&trans        &kp K_CMENU   &none       &kp F11     &kp F12    &kp PG_DN  &trans  &trans  &to 0   &trans  &trans  &trans  &kp COMMA  &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_ENTER     &trans
&trans        &kp CAPS      &kp INS     &kp F11     &kp F12               &trans  &trans  &trans  &trans  &trans  &trans             &kp KP_N0   &kp KP_N0     &kp KP_DOT     &kp KP_ENTER     &trans
            >;
        };

        magic_layer {
            bindings = <
&bt BT_CLR   &none            &none            &none            &none                                                                              &none  &none  &none  &none  &bt BT_CLR_ALL
&none        &none            &none            &none            &none            &none                                                      &none  &none  &none  &none  &none  &none
&none        &rgb_ug RGB_SPI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_BRI  &rgb_ug RGB_TOG                                            &none  &none  &none  &none  &none  &none
&bootloader  &rgb_ug RGB_SPD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_BRD  &rgb_ug RGB_EFF                                            &none  &none  &none  &none  &none  &bootloader
&sys_reset   &none            &none            &none            &none            &none            &bt_2  &bt_3  &none  &none  &none  &none  &none  &none  &none  &none  &none  &sys_reset
&none        &none            &none            &none            &none                             &bt_0  &bt_1  &usb   &none  &none  &none         &none  &none  &none  &none  &to 0
            >;
        };
    };
};
